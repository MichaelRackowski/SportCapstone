@model Sports_Capstone.Models.PlayingEvent

@{
    ViewBag.Title = "Details";
}
@*<!DOCTYPE html>
    <html>
    <head>
        <link rel="stylesheet" type="text/css" href="PlayingEvent/Details/StyleSheet1.css" >
    </head>
    <body>*@
<style>
   
    .dl-horizontal {
        height: 90px;
        width: 50%;
        text-align: center;
        padding-top: 10px;
        color: blueviolet;
        font-size: 18px;
    }
</style>
<style>
    .table {
        color:orangered;
        text-align:center;
    }
</style>






@*<h2>Details</h2>*@

<div>
    <h4>PlayingEvent Details</h4>
    <hr />
    <dl class="dl-horizontal">
        @*<dt>
                @Html.DisplayNameFor(model => model.Players.FirstName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Players.FirstName)
            </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.Location)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Location)
        </dd>
        
        <dt>
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SportName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SportName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TypeOfPlay)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TypeOfPlay)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SkillLevel)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SkillLevel)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CurrentPlayers)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CurrentPlayers)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PlayersAllowed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PlayersAllowed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>
    </dl>
</div>

<br>
<br>
<br>
<br/>



<div>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Players)
            </th>
            <th></th>
        </tr>
        @foreach (var item in Model.Players)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>

                <td>
                    @Html.ActionLink("Message", "Create", "MessageBoard")
                </td>
            </tr>
        }
    </table>

</div>

<style>
    /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
    #map {
        height: 400px;
        width: 700px;
    }
</style>
<br />
<div class="row">
    <div id="map"></div>
    <script>
        var map;
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: @Model.lat , lng: @Model.lng  },
                    zoom: 28
                });
            }
    </script>

    <script src=@ViewBag.thing
            async defer></script>
</div>
<p>
    @*@Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |*@
    @*@Html.ActionLink("Back to List", "Index")*@


    @Html.ActionLink("View Messages", "Index", "MessageBoard")

</p>


<script>
    function initMap() {
        var mapOptions = {
            zoom: 12,
            center: new google.maps.LatLng(@Model.lat, @Model.lng),
            mapTypeId: 'roadmap'
        };
        var map = new google.maps.Map(document.getElementById('map'), mapOptions);

        var goldenGatePosition = { lat: @Model.lat, lng: @Model.lng };
        var marker = new google.maps.Marker({
            position: goldenGatePosition,
            map: map,
            title: 'Playing Event'
        });

    }
</script>
@*</body>
</html>*@

